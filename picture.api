syntax="v1"

type (
	ImgReq {
		VehicleNum   string `json:"vehicleNum,optional"`
		GenerateTime string `json:"generateTime,optional"`
		Channel      string `json:"channel,optional"`
		ChassisPhoto string `json:"chassisPhoto,optional"`
		VehiclePhoto string `json:"vehiclePhoto,optional"`
	}
	ImgRes {
		Code    int    `json:"code"`
		Message string `json:"message"`
	}
)
// 定义 HTTP 服务
// @server 语法块主要用于控制对 HTTP 服务生成时 meta 信息，目前支持功能有：
// 1. 路由分组
// 2. 中间件声明
// 3. 路由前缀
// 4. 超时配置
// 5. jwt 鉴权开关
// 所有声明仅对当前 service 中的路由有效
@server (
	// 定义路由前缀为 "/v1"
	prefix: /v1
)

// 定义 HTTP 服务
// 微服务名称为 user，生成的代码目录和配置文件将和 user 值相关
service img {
	// 定义 http.HandleFunc 转换的 go 文件名称及方法
	@handler ReceiveImg
	// 定义接口
	// 请求方法为 post
	// 路由为 /user/login
	// 请求体为 LoginReq
	// 响应体为 LoginResp，响应体必须有 returns 关键字修饰
	post /car/img (ImgReq) returns (ImgRes)
}